var b=(y,r,w)=>new Promise((x,g)=>{var l=i=>{try{c(w.next(i))}catch(d){g(d)}},n=i=>{try{c(w.throw(i))}catch(d){g(d)}},c=i=>i.done?x(i.value):Promise.resolve(i.value).then(l,n);c((w=w.apply(y,r)).next())});var S=({dbName:y,store:r,autoIncrement:w,keyPath:x,version:g,uint8Array:l})=>{let n,c,i;l&&(c=new TextEncoder,i=new TextDecoder);let d=()=>new Promise(o=>{if(n)o(void 0);else{let e=window.indexedDB.open(y,g);e.onerror=console.error,e.onsuccess=t=>{n||(n=t.target.result),o(void 0)},e.onupgradeneeded=function(t){n||(n=t.target.result),n.createObjectStore(r,{autoIncrement:w,keyPath:x})}}}),m=typeof window.indexedDB!="undefined";m||console.error("[nano-indexed] [Error] Your browser not have indexedDB.");let v={set:(o,e)=>b(void 0,null,function*(){return m?(n||(yield d()),l&&(typeof e!="string"?e=c.encode(JSON.stringify(e)):e=c.encode(e)),new Promise(t=>{if(n.objectStoreNames.contains(r)){let s=n.transaction([r],"readwrite").objectStore(r),a=o?s.put(e,o):s.put(e);a.onerror=f=>{console.error(f),t(void 0)},a.onsuccess=t}else t(void 0)})):new Promise((t,u)=>u(void 0))}),update:(o,e)=>b(void 0,null,function*(){if(!m)return new Promise((s,a)=>a(void 0));let t=yield v.get(o);if(!t)return yield v.set(o,e),e;let u=Object.assign(Object.assign({},t),e);return yield v.set(o,u),u}),get:o=>b(void 0,null,function*(){return m?(n||(yield d()),new Promise(e=>{if(n.objectStoreNames.contains(r)){let s=n.transaction([r]).objectStore(r).get(o);s.onsuccess=function(a){let f=a.target.result;if(l){f=i.decode(f);try{f=JSON.parse(f)}catch(P){}}e(f)}}else e(void 0)})):new Promise((e,t)=>t(void 0))}),remove:o=>b(void 0,null,function*(){return m?(n||(yield d()),new Promise(e=>{if(n.objectStoreNames.contains(r)){let s=n.transaction([r],"readwrite").objectStore(r).delete(o);s.onerror=a=>{console.error(a),e(void 0)},s.onsuccess=e}else e(void 0)})):new Promise((e,t)=>t(void 0))})};return v};export{S as NanoIndexed};
