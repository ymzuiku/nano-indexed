var m=(v,r,l)=>new Promise((x,w)=>{var g=a=>{try{i(l.next(a))}catch(s){w(s)}},n=a=>{try{i(l.throw(a))}catch(s){w(s)}},i=a=>a.done?x(a.value):Promise.resolve(a.value).then(g,n);i((l=l.apply(v,r)).next())});var y=({dbName:v,store:r,autoIncrement:l,keyPath:x,version:w,uint8Array:g})=>{let n,i,a;g&&(i=new TextEncoder,a=new TextDecoder);let s=()=>new Promise(o=>{if(n)o(void 0);else{let e=window.indexedDB.open(v,w);e.onerror=console.error,e.onsuccess=t=>{n||(n=t.target.result),o(void 0)},e.onupgradeneeded=function(t){n||(n=t.target.result),n.createObjectStore(r,{autoIncrement:l,keyPath:x})}}}),S=typeof window.indexedDB!="undefined";S||console.error("[nano-indexed] [Error] Your browser not have indexedDB, Now use localStorage.");let b={set:(o,e)=>m(void 0,null,function*(){return S?(n||(yield s()),g&&(typeof e!="string"?e=i.encode(JSON.stringify(e)):e=i.encode(e)),new Promise(t=>{if(n.objectStoreNames.contains(r)){let d=n.transaction([r],"readwrite").objectStore(r),f=o?d.put(e,o):d.put(e);f.onerror=u=>{console.error(u),t(void 0)},f.onsuccess=t}else t(void 0)})):new Promise((t,c)=>{localStorage.setItem((o||1).toString(),JSON.stringify(e)),t(void 0)})}),update:(o,e)=>m(void 0,null,function*(){let t=yield b.get(o);if(!t)return yield b.set(o,e),e;let c=Object.assign(Object.assign({},t),e);return yield b.set(o,c),c}),get:o=>m(void 0,null,function*(){return S?(n||(yield s()),new Promise(e=>{if(n.objectStoreNames.contains(r)){let d=n.transaction([r]).objectStore(r).get(o);d.onsuccess=function(f){let u=f.target.result;if(g){u=a.decode(u);try{u=JSON.parse(u)}catch(p){}}e(u)}}else e(void 0)})):new Promise(e=>{let t=localStorage.getItem((o||1).toString());if(t)try{t=JSON.parse(t)}catch(c){}e(t)})}),remove:o=>m(void 0,null,function*(){return S?(n||(yield s()),new Promise(e=>{if(n.objectStoreNames.contains(r)){let d=n.transaction([r],"readwrite").objectStore(r).delete(o);d.onerror=f=>{console.error(f),e(void 0)},d.onsuccess=e}else e(void 0)})):new Promise(e=>{localStorage.removeItem((o||1).toString()),e(void 0)})})};return b};export{y as NanoIndexed};
